// inference.cairo
// Create a module and declare it as a contract
#[starknet::contract]
mod OrionRunner {
    use orion::operators::tensor::{Tensor, TensorTrait};
    use orion::operators::tensor::{U32Tensor, I32Tensor, I8Tensor, FP8x23Tensor, FP16x16Tensor, FP32x32Tensor, BoolTensor};
    use orion::numbers::{FP8x23, FP16x16, FP32x32};
    use orion::operators::nn::{NNTrait, FP16x16NN};

    use node_fc1_bias::get_node_fc1_bias;
    use node_fc2_bias::get_node_fc2_bias;
    use node_onnx_matmul_12::get_node_onnx_matmul_12;
    use node_onnx_matmul_13::get_node_onnx_matmul_13;

    use orion::numbers::FixedTrait;
    // Declare the contract storage, in this case is a dummy storage as we won't use it
	#[storage]
	struct Storage { 
		id: u8,
	}

    // Declare the main function as an external function and add `self: @ContractState` as the first argument
	#[external(v0)]
    fn main(self: @ContractState) -> Tensor<FP16x16> {
        let _0 = input();
        let node_fc1_matmul_output_0 = TensorTrait::matmul(@_0, @get_node_onnx_matmul_12());
        let node_fc1_add_output_0 = TensorTrait::add(get_node_fc1_bias(), node_fc1_matmul_output_0);
        let node_relu_output_0 = NNTrait::relu(@node_fc1_add_output_0);
        let node_fc2_matmul_output_0 = TensorTrait::matmul(@node_relu_output_0, @get_node_onnx_matmul_13());
        let node_11 = TensorTrait::add(get_node_fc2_bias(), node_fc2_matmul_output_0);

        node_11
    }

    fn input() -> Tensor<FP16x16> {
    TensorTrait::<FP16x16>::new(
        array![196].span(),
        array![
    FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(17284, false),
 FixedTrait::<FP16x16>::new(19918, false),
 FixedTrait::<FP16x16>::new(6168, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(42213, false),
 FixedTrait::<FP16x16>::new(44590, false),
 FixedTrait::<FP16x16>::new(56862, false),
 FixedTrait::<FP16x16>::new(56220, false),
 FixedTrait::<FP16x16>::new(58083, false),
 FixedTrait::<FP16x16>::new(57826, false),
 FixedTrait::<FP16x16>::new(56477, false),
 FixedTrait::<FP16x16>::new(39579, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(1092, false),
 FixedTrait::<FP16x16>::new(5140, false),
 FixedTrait::<FP16x16>::new(8610, false),
 FixedTrait::<FP16x16>::new(8096, false),
 FixedTrait::<FP16x16>::new(38101, false),
 FixedTrait::<FP16x16>::new(37715, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(9702, false),
 FixedTrait::<FP16x16>::new(62966, false),
 FixedTrait::<FP16x16>::new(8160, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(44654, false),
 FixedTrait::<FP16x16>::new(32640, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(8674, false),
 FixedTrait::<FP16x16>::new(57119, false),
 FixedTrait::<FP16x16>::new(3727, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(1221, false),
 FixedTrait::<FP16x16>::new(51465, false),
 FixedTrait::<FP16x16>::new(29748, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(31997, false),
 FixedTrait::<FP16x16>::new(51658, false),
 FixedTrait::<FP16x16>::new(2249, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(10537, false),
 FixedTrait::<FP16x16>::new(63351, false),
 FixedTrait::<FP16x16>::new(10794, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(43562, false),
 FixedTrait::<FP16x16>::new(63030, false),
 FixedTrait::<FP16x16>::new(5911, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(24094, false),
 FixedTrait::<FP16x16>::new(14456, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false),
 FixedTrait::<FP16x16>::new(0, false)
        ].span()
    )
}
// Remember to close the module bracket!
}